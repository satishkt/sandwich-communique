buildscript {
    ext {
        springBootVersion = '1.3.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'sandwich-communique'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }

}


configurations {
    providedRuntime
    querydslapt
    compile.exclude module: "spring-boot-starter-tomcat"
}
sourceSets {
    generated {
        java {
            srcDirs = ['src/main/generated']
        }
    }
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-jetty:1.3.1.RELEASE")
    compile('org.projectlombok:lombok:1.16.6')
    compile('com.twitter:twitter-text:1.6.1')
    compile('com.mysema.querydsl:querydsl-mongodb:3.7.0')
    compile('javax.inject:javax.inject:1')
    compile('com.mysema.querydsl:querydsl-mongodb:3.7.0')
    compile('org.apache.commons:commons-lang3:3.4')
    compile('com.google.guava:guava:18.0')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    querydslapt "com.mysema.querydsl:querydsl-apt:3.7.0"
}



task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.querydslapt
    options.compilerArgs = [
            "-proc:only",
            "-processor", "org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

compileGeneratedJava {
    dependsOn generateQueryDSL
    options.warnings = false
    classpath += sourceSets.main.runtimeClasspath
}

clean {
    delete sourceSets.generated.java.srcDirs
}

idea {

    module {
        sourceDirs += file('src/main/generated')
    }

}



eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
